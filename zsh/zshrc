#-------------------------------------------
# begin {aliases}
#-------------------------------------------
alias -g ...='../..'
alias -g ....='../../..'
alias -g .....='../../../..'
alias -g ......='../../../../..'

alias reload='source ~/.zshrc'
alias ls='ls -A --color=auto'
alias v='nvim'

alias g='git'
alias gp='git pull'
alias gpu='git push'
alias ga='git add'
alias gs='git status'
alias gl='git log'

alias nr='npm run'
alias ni='npm install'
alias nid='npm install -D'
#
#-------------------------------------------
# begin {exports}
#-------------------------------------------
export PATH=$PATH:$HOME/.asdf:$HOME/.asdf/bin:$HOME/.asdf/shims:$HOME/.local/bin
export EDITOR=nvim

export EJPATH=$HOME/.ejdots

export SCANPATH=$HOME/.node-red/projects/scanuplam-node-red/
export SRCPATH=$SCANPATH/uibuilder/app/src/
#
#-------------------------------------------
# begin {functions}
#-------------------------------------------
# Function: mkdir + cd
mkd() { mkdir -p "$@" && cd "$_";}

uninstall_ejdots() { sh $EJPATH/tools/uninstall.sh;} # Function: uninstall EJDots

gcm() { git commit -m "$1";} # Function: git commit with message

git_branch_name() {
  BRANCH=$(git symbolic-ref HEAD 2> /dev/null | awk 'BEGIN{FS="/"} {print $NF}')
  echo "$BRANCH"
}

number_not_staged() {expr `git status --porcelain 2>/dev/null| grep "^ " | wc -l`}
number_staged() {expr `git status --porcelain 2>/dev/null| grep -v "^ " | wc -l`}

git_prompt_info() {
  if [[ $(git rev-parse --is-inside-work-tree 2> /dev/null) != '' ]]; then
    if [[ $(number_not_staged) != 0 ]]; then
      echo " %F{255}git:(%F{203}$(git_branch_name)%f%F{255})%f "
    else
      if [[ $(number_staged) != 0 ]]; then
        echo " %F{255}git:(%F{220}$(git_branch_name)%f%F{255})%f "
      else
        echo " %F{255}git:(%F{118}$(git_branch_name)%f%F{255})%f "
      fi
    fi
  else
    echo " "
  fi
}

setopt PROMPT_SUBST # Allow use variables in prompt

PROMPT='%B%F{040}%n%b@%m%f:%F{032}%~%f$(git_prompt_info)'

neofetch
